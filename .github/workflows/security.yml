name: Security Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo-audit
      uses: taiki-e/install-action@cargo-audit

    - name: Run security audit
      run: cargo audit --deny warnings

    - name: Upload audit results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-results
        path: |
          audit-results.json
        retention-days: 30

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-deny-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo-deny
      uses: taiki-e/install-action@cargo-deny

    - name: Run cargo-deny
      run: |
        cargo deny check licenses
        cargo deny check bans
        cargo deny check advisories
        cargo deny check sources

  supply-chain-security:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-vet-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo-vet
      uses: taiki-e/install-action@cargo-vet

    - name: Initialize cargo-vet (if needed)
      run: |
        if [ ! -f supply-chain/config.toml ]; then
          cargo vet init
        fi

    - name: Run cargo-vet
      run: cargo vet --locked || true  # Allow to fail initially

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-license-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo-license
      run: cargo install cargo-license

    - name: Check licenses
      run: |
        cargo license --tsv > licenses.tsv
        echo "=== License Summary ==="
        cargo license --tsv | tail -n +2 | cut -f3 | sort | uniq -c | sort -nr
        
        # Check for problematic licenses
        if cargo license --tsv | grep -i "gpl\|agpl\|copyleft"; then
          echo "WARNING: Found potentially problematic licenses!"
          exit 1
        fi

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.tsv
        retention-days: 90
