[package]
name = "swarms-rs"
version = "0.1.6"
edition = "2021"
description = "The Enterprise-Grade Production-Ready Multi-Agent Orchestration Framework in Rust"
authors = ["Kye Gomez <kye@kyegomez.com>"]
license = "Apache-2.0"
repository = "https://github.com/The-Swarm-Corporation/swarms-rs"
documentation = "https://docs.rs/swarms-rs"
readme = "README.md"
keywords = ["ai", "agents", "swarms", "multi-agent", "llm"]

[dependencies]
# Standard utilities
chrono = { version = "0.4", features = ["serde"] }
dashmap = { version = "6", features = ["serde"] }
schemars = "=1.0.0-alpha.17"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
erased-serde = "0.4"
futures = "0.3"
uuid = { version = "1.15", features = ["v4", "serde"] }
typed-builder = "0.17"
url = "2.5"

# HTTP client
hyper = { version = "1.1", features = ["full"] }
hyper-rustls = { version = "0.25", features = ["native-tokio"] }
tokio-rustls = "0.25"

# Asynchronous programming
tokio = { version = "1", features = ["full"] }

# Error handling and logging
thiserror = "2"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Data processing
twox-hash = "2.1"
zstd = "0.13.3"
petgraph = { version = "0.7", default-features = false, features = [
    "stable_graph",
] }

# System interaction
reqwest = { version = "0.12", features = [
    "json",
    "stream",
    "multipart",
    "rustls-tls-native-roots",
], default-features = false }

# LLM provider
async-openai = { version = "0.28", features = ["byot"] }

# MCP
rmcp = { version = "0.1.5", features = [
    "client",
    "transport-sse",
    "transport-child-process",
] }

# macro
swarms-macro = { path = "../swarms-macro" }

[dev-dependencies]
anyhow = "1"
dotenv = "0.15"
tempfile = "3.19"
tokio = { version = "1", features = ["macros", "rt-multi-thread", "tracing"] }
tokio-test = "0.4"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
mockall = "0.13"
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "concurrent_workflow_benchmarks"
harness = false

[[bench]]
name = "graph_workflow_benchmarks"
harness = false

[[example]]
name = "basic_usage"
path = "examples/api_client_examples/basic_usage.rs"

[[example]]
name = "batch_operations"
path = "examples/api_client_examples/batch_operations.rs"

[[example]]
name = "error_handling"
path = "examples/api_client_examples/error_handling.rs"
